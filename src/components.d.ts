/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface ScarletIcon {
        "color"?: string;
        "description"?: string;
        "filename"?: string;
    }
    interface ScarletInput {
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "iconDescription"?: string;
        "iconFilename"?: string;
        "idprop"?: string;
        "label"?: string;
        "mask"?: 'CPF' | 'CNPJ' | 'CEP' | 'CPFCNPJ' | 'CURRENCY' | '';
        "maxlength"?: number;
        "name": string;
        "readonly"?: boolean;
        "required"?: boolean;
        "type"?: 'text' | 'number' | 'date' | 'email' | 'password' | 'search' | 'tel';
        "value"?: any;
    }
    interface ScarletInputCpfcnpj {
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "idprop"?: string;
        "label"?: string;
        "name": string;
        "readonly"?: boolean;
        "required"?: boolean;
        "value"?: string;
    }
    interface ScarletInputPassword {
        "checked": boolean;
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "idprop"?: string;
        "label"?: string;
        "name": string;
        "readonly"?: boolean;
        "required"?: boolean;
        "value"?: string;
    }
}
export interface ScarletInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLScarletInputElement;
}
export interface ScarletInputPasswordCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLScarletInputPasswordElement;
}
declare global {
    interface HTMLScarletIconElement extends Components.ScarletIcon, HTMLStencilElement {
    }
    var HTMLScarletIconElement: {
        prototype: HTMLScarletIconElement;
        new (): HTMLScarletIconElement;
    };
    interface HTMLScarletInputElement extends Components.ScarletInput, HTMLStencilElement {
    }
    var HTMLScarletInputElement: {
        prototype: HTMLScarletInputElement;
        new (): HTMLScarletInputElement;
    };
    interface HTMLScarletInputCpfcnpjElement extends Components.ScarletInputCpfcnpj, HTMLStencilElement {
    }
    var HTMLScarletInputCpfcnpjElement: {
        prototype: HTMLScarletInputCpfcnpjElement;
        new (): HTMLScarletInputCpfcnpjElement;
    };
    interface HTMLScarletInputPasswordElement extends Components.ScarletInputPassword, HTMLStencilElement {
    }
    var HTMLScarletInputPasswordElement: {
        prototype: HTMLScarletInputPasswordElement;
        new (): HTMLScarletInputPasswordElement;
    };
    interface HTMLElementTagNameMap {
        "scarlet-icon": HTMLScarletIconElement;
        "scarlet-input": HTMLScarletInputElement;
        "scarlet-input-cpfcnpj": HTMLScarletInputCpfcnpjElement;
        "scarlet-input-password": HTMLScarletInputPasswordElement;
    }
}
declare namespace LocalJSX {
    interface ScarletIcon {
        "color"?: string;
        "description"?: string;
        "filename"?: string;
    }
    interface ScarletInput {
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "iconDescription"?: string;
        "iconFilename"?: string;
        "idprop"?: string;
        "label"?: string;
        "mask"?: 'CPF' | 'CNPJ' | 'CEP' | 'CPFCNPJ' | 'CURRENCY' | '';
        "maxlength"?: number;
        "name"?: string;
        "onChanged"?: (event: ScarletInputCustomEvent<UIEvent>) => void;
        "readonly"?: boolean;
        "required"?: boolean;
        "type"?: 'text' | 'number' | 'date' | 'email' | 'password' | 'search' | 'tel';
        "value"?: any;
    }
    interface ScarletInputCpfcnpj {
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "idprop"?: string;
        "label"?: string;
        "name"?: string;
        "readonly"?: boolean;
        "required"?: boolean;
        "value"?: string;
    }
    interface ScarletInputPassword {
        "checked"?: boolean;
        "disabled"?: boolean;
        "errormessage"?: string;
        "helpermessage"?: string;
        "idprop"?: string;
        "label"?: string;
        "name"?: string;
        "onChechekChangeTo"?: (event: ScarletInputPasswordCustomEvent<boolean>) => void;
        "readonly"?: boolean;
        "required"?: boolean;
        "value"?: string;
    }
    interface IntrinsicElements {
        "scarlet-icon": ScarletIcon;
        "scarlet-input": ScarletInput;
        "scarlet-input-cpfcnpj": ScarletInputCpfcnpj;
        "scarlet-input-password": ScarletInputPassword;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "scarlet-icon": LocalJSX.ScarletIcon & JSXBase.HTMLAttributes<HTMLScarletIconElement>;
            "scarlet-input": LocalJSX.ScarletInput & JSXBase.HTMLAttributes<HTMLScarletInputElement>;
            "scarlet-input-cpfcnpj": LocalJSX.ScarletInputCpfcnpj & JSXBase.HTMLAttributes<HTMLScarletInputCpfcnpjElement>;
            "scarlet-input-password": LocalJSX.ScarletInputPassword & JSXBase.HTMLAttributes<HTMLScarletInputPasswordElement>;
        }
    }
}
